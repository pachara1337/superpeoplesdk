// ScriptStruct Renderer.LightPropagationVolumeSettings
// Size: 0x2cff6970 (Inherited: 0x00)
struct FLightPropagationVolumeSettings {
	char bOverride_LPVIntensity : 1; // 0x00(0x01)
	char bOverride_LPVDirectionalOcclusionIntensity : 1; // 0x00(0x01)
	char bOverride_LPVDirectionalOcclusionRadius : 1; // 0x00(0x01)
	char bOverride_LPVDiffuseOcclusionExponent : 1; // 0x00(0x01)
	char bOverride_LPVSpecularOcclusionExponent : 1; // 0x00(0x01)
	char bOverride_LPVDiffuseOcclusionIntensity : 1; // 0x00(0x01)
	char bOverride_LPVSpecularOcclusionIntensity : 1; // 0x00(0x01)
	char bOverride_LPVSize : 1; // 0x00(0x01)
	char bOverride_LPVSecondaryOcclusionIntensity : 1; // 0x01(0x01)
	char bOverride_LPVSecondaryBounceIntensity : 1; // 0x01(0x01)
	char bOverride_LPVGeometryVolumeBias : 1; // 0x01(0x01)
	char bOverride_LPVVplInjectionBias : 1; // 0x01(0x01)
	char bOverride_LPVEmissiveInjectionIntensity : 1; // 0x01(0x01)
	char bOverride_LPVReflectionIntensity : 1; // 0x01(0x01)
	char bOverride_LPVReflectionLength : 1; // 0x01(0x01)
	char bOverride_LPVReflectionOcclusion : 1; // 0x01(0x01)
	char bOverride_LPVHairSpecularLightingIntensity : 1; // 0x02(0x01)
	char bOverride_LPVHairSpecularOcclusionIntensity : 1; // 0x02(0x01)
	char bOverride_LPVHairRoughnessOverride : 1; // 0x02(0x01)
	char bOverride_LPVDistantLightingIntensity : 1; // 0x02(0x01)
	char bOverride_UseSeparateAOVolume : 1; // 0x02(0x01)
	char bOverride_LPVEnvironmentColor : 1; // 0x02(0x01)
	char pad_2_6 : 2; // 0x02(0x01)
	char pad_3[0x1]; // 0x03(0x01)
	float LPVIntensity; // 0x04(0x04)
	float LPVVplInjectionBias; // 0x08(0x04)
	float LPVSize; // 0x0c(0x04)
	float LPVSecondaryOcclusionIntensity; // 0x10(0x04)
	float LPVSecondaryBounceIntensity; // 0x14(0x04)
	float LPVGeometryVolumeBias; // 0x18(0x04)
	float LPVEmissiveInjectionIntensity; // 0x1c(0x04)
	float LPVDirectionalOcclusionIntensity; // 0x20(0x04)
	float LPVDirectionalOcclusionRadius; // 0x24(0x04)
	float LPVDiffuseOcclusionExponent; // 0x28(0x04)
	float LPVSpecularOcclusionExponent; // 0x2c(0x04)
	float LPVDiffuseOcclusionIntensity; // 0x30(0x04)
	float LPVSpecularOcclusionIntensity; // 0x34(0x04)
	float LPVFadeRange; // 0x38(0x04)
	float LPVDirectionalOcclusionFadeRange; // 0x3c(0x04)
	float LPVReflectionIntensity; // 0x40(0x04)
	float LPVReflectionLength; // 0x44(0x04)
	char bLPVReflectionOcclusion : 1; // 0x48(0x01)
	char pad_48_1 : 7; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	float LPVHairSpecularLightingIntensity; // 0x4c(0x04)
	float LPVHairSpecularOcclusionIntensity; // 0x50(0x04)
	float LPVHairRoughnessOverride; // 0x54(0x04)
	float LPVDistantLightingIntensity; // 0x58(0x04)
	struct FLinearColor LPVEnvironmentColor; // 0x5c(0x10)
	char bUseSeparateAOVolume : 1; // 0x6c(0x01)
	char pad_6C_1 : 7; // 0x6c(0x01)
	char pad_6D[0x2cff6903]; // 0x6d(0x2cff6903)
};

// ScriptStruct Renderer.VolumetricFogVolumeSettings
// Size: 0x2cff6a14 (Inherited: 0x00)
struct FVolumetricFogVolumeSettings {
	char bOverride_UseVolumetricFogEmissive : 1; // 0x00(0x01)
	char bOverride_VolumetricFogEmissive : 1; // 0x00(0x01)
	char UseVolumetricFogEmissive : 1; // 0x00(0x01)
	char pad_0_3 : 5; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FLinearColor VolumetricFogEmissive; // 0x04(0x10)
	char pad_14[0x2cff6a00]; // 0x14(0x2cff6a00)
};

