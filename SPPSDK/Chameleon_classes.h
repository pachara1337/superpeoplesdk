// BlueprintGeneratedClass Chameleon.Chameleon_C
// Size: 0x2cff6a68 (Inherited: 0x2cff6b08)
struct AChameleon_C : AActor {
	struct FPointerToUberGraphFrame UberGraphFrame; // 0x308(0x08)
	struct UMaterialBillboardComponent* MaterialBillboard; // 0x310(0x08)
	struct UPostProcessComponent* InternalPP; // 0x318(0x08)
	struct UBoxComponent* Bounding Box; // 0x320(0x08)
	bool Bleach Bypass; // 0x328(0x01)
	bool Distance Fog; // 0x329(0x01)
	bool Channel Clamper; // 0x32a(0x01)
	struct UMaterial* mChannelClamper; // 0x330(0x08)
	struct UMaterialInstanceDynamic* iChannelClamper; // 0x338(0x08)
	bool Channel Swapper; // 0x340(0x01)
	bool Screen Drops; // 0x341(0x01)
	bool Alcohol; // 0x342(0x01)
	bool Drug; // 0x343(0x01)
	bool Mosaic; // 0x344(0x01)
	bool Pixel Dissolve; // 0x345(0x01)
	bool Blur; // 0x346(0x01)
	struct UMaterial* mBleachBypass; // 0x348(0x08)
	struct UMaterial* mDistanceFog; // 0x350(0x08)
	struct UMaterial* mChannelSwapper; // 0x358(0x08)
	struct UMaterial* mScreenDrops; // 0x360(0x08)
	struct UMaterial* mAlcohol; // 0x368(0x08)
	struct UMaterial* mDrug; // 0x370(0x08)
	struct UMaterial* mMosaic; // 0x378(0x08)
	struct UMaterial* mPixelDissolve; // 0x380(0x08)
	struct UMaterial* mBlur; // 0x388(0x08)
	float Channel Clamper Red Intensity; // 0x390(0x04)
	float Channel Clamper Green Intensity; // 0x394(0x04)
	float Channel Clamper Blue Intensity; // 0x398(0x04)
	struct UMaterialInstanceDynamic* iBleachBypass; // 0x3a0(0x08)
	struct UMaterialInstanceDynamic* iDistanceFog; // 0x3a8(0x08)
	struct UMaterialInstanceDynamic* iChannelSwapper; // 0x3b0(0x08)
	enum class ColorChannels Channel Swapper Red; // 0x3b8(0x01)
	enum class ColorChannels Channel Swapper Green; // 0x3b9(0x01)
	enum class ColorChannels Channel Swapper Blue; // 0x3ba(0x01)
	struct UMaterialInstanceDynamic* iScreenDrops; // 0x3c0(0x08)
	struct UMaterialInstanceDynamic* iAlcohol; // 0x3c8(0x08)
	struct UMaterialInstanceDynamic* iDrug; // 0x3d0(0x08)
	struct UMaterialInstanceDynamic* iMosaic; // 0x3d8(0x08)
	struct UMaterialInstanceDynamic* iPixelDissolve; // 0x3e0(0x08)
	struct UMaterialInstanceDynamic* iBlur; // 0x3e8(0x08)
	struct UTexture2D* Screen Drops Layer 1 Map; // 0x3f0(0x08)
	float Screen Drops Layer 1 Intensity; // 0x3f8(0x04)
	float Mosaic Scale; // 0x3fc(0x04)
	float Alcohol Speed; // 0x400(0x04)
	float Drug Speed; // 0x404(0x04)
	float Pixel Dissolve Intensity; // 0x408(0x04)
	float Blur Amount; // 0x40c(0x04)
	bool ASCII; // 0x410(0x01)
	struct UMaterial* mAscii; // 0x418(0x08)
	struct UMaterialInstanceDynamic* iAscii; // 0x420(0x08)
	bool Colorize; // 0x428(0x01)
	struct UMaterial* mColorize; // 0x430(0x08)
	struct UMaterialInstanceDynamic* iColorize; // 0x438(0x08)
	float Colorize Detail; // 0x440(0x04)
	bool Comic; // 0x444(0x01)
	struct UMaterial* mComic; // 0x448(0x08)
	struct UMaterialInstanceDynamic* iComic; // 0x450(0x08)
	struct FLinearColor Comic Blend Color; // 0x458(0x10)
	float Comic Threshold; // 0x468(0x04)
	bool Edge Detect; // 0x46c(0x01)
	struct UMaterial* mEdgeDetect; // 0x470(0x08)
	struct UMaterialInstanceDynamic* iEdgeDetect; // 0x478(0x08)
	bool Emboss; // 0x480(0x01)
	struct UMaterial* mEmboss; // 0x488(0x08)
	struct UMaterialInstanceDynamic* iEmboss; // 0x490(0x08)
	bool Glitch; // 0x498(0x01)
	struct UMaterial* mGlitch; // 0x4a0(0x08)
	struct UMaterialInstanceDynamic* iGlitch; // 0x4a8(0x08)
	float Glitch Speed; // 0x4b0(0x04)
	float Glitch Lines; // 0x4b4(0x04)
	float Glitch Blocking; // 0x4b8(0x04)
	bool Monitor Effects; // 0x4bc(0x01)
	struct UMaterial* mGrainNLines; // 0x4c0(0x08)
	struct UMaterialInstanceDynamic* iGrainNLines; // 0x4c8(0x08)
	float Monitor Effects Line Count; // 0x4d0(0x04)
	float Monitor Effects Intensity 1; // 0x4d4(0x04)
	float Monitor Effects Intensity 2; // 0x4d8(0x04)
	bool Hard Emboss; // 0x4dc(0x01)
	struct UMaterial* mHardEmboss; // 0x4e0(0x08)
	struct UMaterialInstanceDynamic* iHardEmboss; // 0x4e8(0x08)
	bool Hue Panner; // 0x4f0(0x01)
	struct UMaterial* mHuePanner; // 0x4f8(0x08)
	struct UMaterialInstanceDynamic* iHuePanner; // 0x500(0x08)
	float Hue Panner Speed; // 0x508(0x04)
	bool Monochrome; // 0x50c(0x01)
	struct UMaterial* mMonochrome; // 0x510(0x08)
	struct UMaterialInstanceDynamic* iMonochrome; // 0x518(0x08)
	struct FLinearColor Monochrome Color; // 0x520(0x10)
	bool Radial Blur; // 0x530(0x01)
	struct UMaterial* mRadialBlur; // 0x538(0x08)
	struct UMaterialInstanceDynamic* iRadialBlur; // 0x540(0x08)
	float Radial Blur Width; // 0x548(0x04)
	int32_t Radial Blur Samples; // 0x54c(0x04)
	bool Scratches; // 0x550(0x01)
	struct UMaterial* mScratches; // 0x558(0x08)
	struct UMaterialInstanceDynamic* iScratches; // 0x560(0x08)
	bool Screen Waves; // 0x568(0x01)
	struct UMaterial* mScreenWaves; // 0x570(0x08)
	struct UMaterialInstanceDynamic* iScreenWaves; // 0x578(0x08)
	float Screen Waves X Tiling; // 0x580(0x04)
	float Screen Waves Y Tiling; // 0x584(0x04)
	float Monitor Effects Distortion 1; // 0x588(0x04)
	float Monitor Effects Distortion 2; // 0x58c(0x04)
	float Monitor Effects Picture Scale; // 0x590(0x04)
	struct FLinearColor Distance Fog Near Color; // 0x594(0x10)
	struct FLinearColor Distance Fog Far Color; // 0x5a4(0x10)
	float Distance Fog Distance; // 0x5b4(0x04)
	struct UTexture2D* Scratches Distortion Map; // 0x5b8(0x08)
	float Scratches Distortion Amount; // 0x5c0(0x04)
	struct FLinearColor Scratches Color; // 0x5c4(0x10)
	float Screen Drops Layer 1 Speed; // 0x5d4(0x04)
	float Screen Drops Layer 1 Noise; // 0x5d8(0x04)
	struct UTexture2D* Screen Drops Layer 2 Map; // 0x5e0(0x08)
	float Screen Drops Layer 2 Intensity; // 0x5e8(0x04)
	float Screen Drops Layer 2 Speed; // 0x5ec(0x04)
	float Screen Drops Layer 2 Noise; // 0x5f0(0x04)
	struct UTexture2D* Screen Drops Layer 3 Map; // 0x5f8(0x08)
	float Screen Drops Layer 3 Intensity; // 0x600(0x04)
	float Screen Drops Layer 3 Speed; // 0x604(0x04)
	bool Invert; // 0x608(0x01)
	struct UMaterial* mInvert; // 0x610(0x08)
	struct UMaterialInstanceDynamic* iInvert; // 0x618(0x08)
	bool Iridescent; // 0x620(0x01)
	struct UMaterial* mIridescent; // 0x628(0x08)
	struct UMaterialInstanceDynamic* iIridescent; // 0x630(0x08)
	float Iridescent Iridescence; // 0x638(0x04)
	bool Kuwahara; // 0x63c(0x01)
	struct UMaterial* mKuwahara; // 0x640(0x08)
	struct UMaterialInstanceDynamic* iKuwahara; // 0x648(0x08)
	int32_t Kuwahara Amount; // 0x650(0x04)
	bool Pulse; // 0x654(0x01)
	struct UMaterial* mPulse; // 0x658(0x08)
	struct UMaterialInstanceDynamic* iPulse; // 0x660(0x08)
	float Pulse Center X; // 0x668(0x04)
	float Pulse Center Y; // 0x66c(0x04)
	float Pulse Speed; // 0x670(0x04)
	float Pulse Smoothing; // 0x674(0x04)
	bool Squares; // 0x678(0x01)
	struct UMaterial* mSquares; // 0x680(0x08)
	struct UMaterialInstanceDynamic* iSquares; // 0x688(0x08)
	float Squares Scale; // 0x690(0x04)
	float Squares Ratio; // 0x694(0x04)
	float Squares Radius; // 0x698(0x04)
	float Squares Brightness; // 0x69c(0x04)
	bool Tiles; // 0x6a0(0x01)
	struct UMaterial* mTiles; // 0x6a8(0x08)
	struct UMaterialInstanceDynamic* iTiles; // 0x6b0(0x08)
	bool Tiles Centered; // 0x6b8(0x01)
	float Tiles Count; // 0x6bc(0x04)
	bool TV Noise; // 0x6c0(0x01)
	struct UMaterial* mTVNoise; // 0x6c8(0x08)
	struct UMaterialInstanceDynamic* iTVNoise; // 0x6d0(0x08)
	float TV Noise Contrast; // 0x6d8(0x04)
	float TV Noise Intensity; // 0x6dc(0x04)
	struct FPostProcessSettings Native Post Process; // 0x6e0(0x5e0)
	bool LOOK!; // 0xcc0(0x01)
	enum class LOOKPresetsEnum LOOK! Presets; // 0xcc1(0x01)
	bool Circles; // 0xcc2(0x01)
	struct UMaterial* mCircles; // 0xcc8(0x08)
	struct UMaterialInstanceDynamic* iCircles; // 0xcd0(0x08)
	float Circles Ratio; // 0xcd8(0x04)
	float Circles Tiling; // 0xcdc(0x04)
	bool Sonar; // 0xce0(0x01)
	struct UMaterial* mSonar; // 0xce8(0x08)
	struct UMaterialInstanceDynamic* iSonar; // 0xcf0(0x08)
	struct FLinearColor Sonar Color; // 0xcf8(0x10)
	float Sonar Color Intensity; // 0xd08(0x04)
	float Sonar Depth; // 0xd0c(0x04)
	float Sonar Wave Distance; // 0xd10(0x04)
	float Sonar Distortion Intensity; // 0xd14(0x04)
	float Sonar Sharpness; // 0xd18(0x04)
	float Alcohol Offset; // 0xd1c(0x04)
	bool Distance Distortion; // 0xd20(0x01)
	struct UMaterial* mDistanceDistortion; // 0xd28(0x08)
	struct UMaterialInstanceDynamic* iDistanceDistortion; // 0xd30(0x08)
	struct UTexture2D* Distance Distortion Normal; // 0xd38(0x08)
	float Distance Distortion Amount; // 0xd40(0x04)
	float Distance Distortion Edge Distance; // 0xd44(0x04)
	float Distance Distortion Edge Fading; // 0xd48(0x04)
	float Distance Distortion Movement Speed; // 0xd4c(0x04)
	float Distance Distortion Movement Scale; // 0xd50(0x04)
	float Distance Distortion Affected Brightness; // 0xd54(0x04)
	float Distance Distortion Unaffected Brightness; // 0xd58(0x04)
	bool Drawing; // 0xd5c(0x01)
	struct UMaterial* mDrawing; // 0xd60(0x08)
	struct UMaterialInstanceDynamic* iDrawing; // 0xd68(0x08)
	struct UTexture2D* Drawing Paper Texture; // 0xd70(0x08)
	enum class DrawingNoiseModes Drawing Noise Algorithm; // 0xd78(0x01)
	float Drawing Ink Amount; // 0xd7c(0x04)
	float Drawing Liner Amount; // 0xd80(0x04)
	struct FLinearColor Drawing Blending Color; // 0xd84(0x10)
	bool Magic Transitions; // 0xd94(0x01)
	struct UMaterial* mMagicTransitions; // 0xd98(0x08)
	struct UMaterialInstanceDynamic* iMagicTransitions; // 0xda0(0x08)
	struct UTexture2D* Magic Transitions Final Texture; // 0xda8(0x08)
	struct UTexture2D* Magic Transitions Mask Texture; // 0xdb0(0x08)
	float Magic Transitions Transition Amount; // 0xdb8(0x04)
	float Magic Transitions Flashing Intensity; // 0xdbc(0x04)
	float Magic Transitions Flashing Tolerance; // 0xdc0(0x04)
	struct FLinearColor Magic Transitions Flashing Color; // 0xdc4(0x10)
	bool Screen Damage; // 0xdd4(0x01)
	struct UMaterial* mScreenDamage; // 0xdd8(0x08)
	struct UMaterialInstanceDynamic* iScreenDamage; // 0xde0(0x08)
	struct UTexture2D* Screen Damage Texture; // 0xde8(0x08)
	float Screen Damage Intensity; // 0xdf0(0x04)
	float Screen Damage Distortion; // 0xdf4(0x04)
	struct FLinearColor Screen Damage Tint; // 0xdf8(0x10)
	float Screen Damage Edge Size; // 0xe08(0x04)
	float Screen Damage Fading; // 0xe0c(0x04)
	bool Screen Decals; // 0xe10(0x01)
	struct UMaterial* mScreenDecals; // 0xe18(0x08)
	struct UMaterialInstanceDynamic* iScreenDecals; // 0xe20(0x08)
	struct UTexture2D* Screen Decals Slot 1 - Texture; // 0xe28(0x08)
	float Screen Decals Slot 1 - Distortion; // 0xe30(0x04)
	float Screen Decals Slot 1 - Intensity; // 0xe34(0x04)
	float Screen Decals Slot 1 - Position X; // 0xe38(0x04)
	float Screen Decals Slot 1 - Position Y; // 0xe3c(0x04)
	float Screen Decals Slot 1 - Rotation; // 0xe40(0x04)
	float Screen Decals Slot 1 - Size; // 0xe44(0x04)
	struct UTexture2D* Screen Decals Slot 2 - Texture; // 0xe48(0x08)
	float Screen Decals Slot 2 - Distortion; // 0xe50(0x04)
	float Screen Decals Slot 2 - Intensity; // 0xe54(0x04)
	float Screen Decals Slot 2 - Position X; // 0xe58(0x04)
	float Screen Decals Slot 2 - Position Y; // 0xe5c(0x04)
	float Screen Decals Slot 2 - Rotation; // 0xe60(0x04)
	float Screen Decals Slot 2 - Size; // 0xe64(0x04)
	struct UTexture2D* Screen Decals Slot 3 - Texture; // 0xe68(0x08)
	float Screen Decals Slot 3 - Distortion; // 0xe70(0x04)
	float Screen Decals Slot 3 - Intensity; // 0xe74(0x04)
	float Screen Decals Slot 3 - Position X; // 0xe78(0x04)
	float Screen Decals Slot 3 - Position Y; // 0xe7c(0x04)
	float Screen Decals Slot 3 - Rotation; // 0xe80(0x04)
	float Screen Decals Slot 3 - Size; // 0xe84(0x04)
	struct UTexture2D* Screen Decals Slot 4 - Texture; // 0xe88(0x08)
	float Screen Decals Slot 4 - Distortion; // 0xe90(0x04)
	float Screen Decals Slot 4 - Intensity; // 0xe94(0x04)
	float Screen Decals Slot 4 - Position X; // 0xe98(0x04)
	float Screen Decals Slot 4 - Position Y; // 0xe9c(0x04)
	float Screen Decals Slot 4 - Rotation; // 0xea0(0x04)
	float Screen Decals Slot 4 - Size; // 0xea4(0x04)
	bool Sharpen; // 0xea8(0x01)
	struct UMaterial* mSharpen; // 0xeb0(0x08)
	struct UMaterialInstanceDynamic* iSharpen; // 0xeb8(0x08)
	float Sharpen Value; // 0xec0(0x04)
	bool Toon Shading; // 0xec4(0x01)
	struct UMaterial* mToonShading; // 0xec8(0x08)
	struct UMaterialInstanceDynamic* iToonShading; // 0xed0(0x08)
	bool Toon Shading Use Diffuse Buffer; // 0xed8(0x01)
	float Toon Shading Details; // 0xedc(0x04)
	float Toon Shading Fading ; // 0xee0(0x04)
	float Toon Shading Size; // 0xee4(0x04)
	float Toon Shading Sobel Strength; // 0xee8(0x04)
	bool Anamorphic Lens Flares; // 0xeec(0x01)
	struct UMaterial* mAnamorphicLensFlares; // 0xef0(0x08)
	struct UMaterialInstanceDynamic* iAnamorphicLensFlares; // 0xef8(0x08)
	float Anamorphic Lens Flares Linear Color; // 0xf00(0x04)
	float Anamorphic Lens Flares Exposure Scale; // 0xf04(0x04)
	float Anamorphic Lens Flares Threshold; // 0xf08(0x04)
	float Anamorphic Lens Flares Intensity; // 0xf0c(0x04)
	float Anamorphic Lens Flares Steps; // 0xf10(0x04)
	float Anamorphic Lens Flares Length; // 0xf14(0x04)
	struct FLinearColor Anamorphic Lens Flares Tint; // 0xf18(0x10)
	bool Frost; // 0xf28(0x01)
	struct UMaterial* mFrost; // 0xf30(0x08)
	struct UMaterialInstanceDynamic* iFrost; // 0xf38(0x08)
	struct UTexture2D* Frost Texture; // 0xf40(0x08)
	float Frost Colorization; // 0xf48(0x04)
	float Frost Distortion Strength; // 0xf4c(0x04)
	float Frost Visible Area; // 0xf50(0x04)
	struct FLinearColor ASCII Color Multiplier; // 0xf54(0x10)
	bool Neon; // 0xf64(0x01)
	struct UMaterial* mNeon; // 0xf68(0x08)
	struct UMaterialInstanceDynamic* iNeon; // 0xf70(0x08)
	struct FLinearColor Neon Color; // 0xf78(0x10)
	float Neon Noise; // 0xf88(0x04)
	float Neon Power; // 0xf8c(0x04)
	bool Custom Depth Highlighter; // 0xf90(0x01)
	struct UMaterial* mCustomDepthHighlighter; // 0xf98(0x08)
	struct UMaterialInstanceDynamic* iCustomDepthHighlighter; // 0xfa0(0x08)
	struct FLinearColor Custom Depth Highlighter Highlight Color; // 0xfa8(0x10)
	float Custom Depth Highlighter Highlight Opacity; // 0xfb8(0x04)
	bool Custom Depth Highlighter (Clip); // 0xfbc(0x01)
	struct UMaterial* mCustomDepthHighlighterClip; // 0xfc0(0x08)
	struct UMaterialInstanceDynamic* iCustomDepthHighlighterClip; // 0xfc8(0x08)
	struct FLinearColor Custom Depth Highlighter (C) Highlight Color; // 0xfd0(0x10)
	float Custom Depth Highlighter (C) Highlight Opacity; // 0xfe0(0x04)
	float Edge Detect Threshold; // 0xfe4(0x04)
	float Scratches Noising; // 0xfe8(0x04)
	bool Enabled; // 0xfec(0x01)
	bool Unbound; // 0xfed(0x01)
	struct TArray<struct UMaterial*> AllMaterials; // 0xff0(0x10)
	float Screen Drops Layer 3 Noise; // 0x1000(0x04)
	struct FLinearColor Screen Drops Diffuse Color; // 0x1004(0x10)
	float Screen Drops Splashes Amount; // 0x1014(0x04)
	float Screen Drops Splashes Tiling; // 0x1018(0x04)
	float Screen Drops Splashes Intensity; // 0x101c(0x04)
	float Screen Drops Bump; // 0x1020(0x04)
	bool 2D Transform; // 0x1024(0x01)
	struct UMaterial* m2DTransform; // 0x1028(0x08)
	struct UMaterialInstanceDynamic* i2DTransform; // 0x1030(0x08)
	bool Kaleidescope; // 0x1038(0x01)
	struct UMaterial* mKaleidescope; // 0x1040(0x08)
	struct UMaterialInstanceDynamic* iKaleidescope; // 0x1048(0x08)
	bool Letterboxing; // 0x1050(0x01)
	struct UMaterial* mLetterboxing; // 0x1058(0x08)
	struct UMaterialInstanceDynamic* iLetterboxing; // 0x1060(0x08)
	bool Snow; // 0x1068(0x01)
	struct UMaterial* mSnow; // 0x1070(0x08)
	struct UMaterialInstanceDynamic* iSnow; // 0x1078(0x08)
	float 2D Transform Anchor Point (X); // 0x1080(0x04)
	float 2D Transform Anchor Point (Y); // 0x1084(0x04)
	float 2D Transform Rotate; // 0x1088(0x04)
	float 2D Transform Pan (X); // 0x108c(0x04)
	float 2D Transform Pan (Y); // 0x1090(0x04)
	float 2D Transform Scale (X); // 0x1094(0x04)
	float 2D Transform Scale (Y); // 0x1098(0x04)
	bool 2D Transform Tiled; // 0x109c(0x01)
	float Kaleidescope Scale; // 0x10a0(0x04)
	float Kaleidescope Factor A; // 0x10a4(0x04)
	float Kaleidescope Factor B; // 0x10a8(0x04)
	struct UTexture2D* Letterboxing Texture; // 0x10b0(0x08)
	float Letterboxing Size; // 0x10b8(0x04)
	bool Letterboxing Horizontal; // 0x10bc(0x01)
	bool Letterboxing Vertical; // 0x10bd(0x01)
	float Snow Amount; // 0x10c0(0x04)
	float Snow Distortion; // 0x10c4(0x04)
	float Snow Size; // 0x10c8(0x04)
	float Snow Speed (X); // 0x10cc(0x04)
	float Snow Speed (Y); // 0x10d0(0x04)
	float Drawing Animation Speed; // 0x10d4(0x04)
	float Distance Fog Edge Sharpness; // 0x10d8(0x04)
	float Screen Drops Diffuse Intensity; // 0x10dc(0x04)
	bool World Splash; // 0x10e0(0x01)
	struct UMaterial* mWorldSplash; // 0x10e8(0x08)
	struct UMaterialInstanceDynamic* iWorldSplash; // 0x10f0(0x08)
	float World Splash Distort; // 0x10f8(0x04)
	float World Splash Smoothness; // 0x10fc(0x04)
	float World Splash Tiling; // 0x1100(0x04)
	struct FLinearColor World Splash Color Tint; // 0x1104(0x10)
	int32_t Blur Samples; // 0x1114(0x04)
	struct FLinearColor Frost Color; // 0x1118(0x10)
	float Comic PreMultiplier; // 0x1128(0x04)
	float Comic Desaturation; // 0x112c(0x04)
	bool World Glitch; // 0x1130(0x01)
	struct UMaterial* mWorldGlitch; // 0x1138(0x08)
	struct UMaterialInstanceDynamic* iWorldGlitch; // 0x1140(0x08)
	bool World Glitch Animated; // 0x1148(0x01)
	float World Glitch Animation Speed; // 0x114c(0x04)
	float World Glitch Distance; // 0x1150(0x04)
	float World Glitch Distance Sharpness; // 0x1154(0x04)
	float World Glitch Phase; // 0x1158(0x04)
	float World Glitch Power; // 0x115c(0x04)
	struct FVector World Glitch Grid Position; // 0x1160(0x0c)
	struct FVector World Glitch Grid Size; // 0x116c(0x0c)
	bool Digitize; // 0x1178(0x01)
	struct UMaterial* mDigitize; // 0x1180(0x08)
	struct UMaterialInstanceDynamic* iDigitize; // 0x1188(0x08)
	struct FLinearColor Digitize Cell Color; // 0x1190(0x10)
	struct FVector Digitize Cell Position; // 0x11a0(0x0c)
	struct FVector Digitize Cell Position Over Time; // 0x11ac(0x0c)
	float Digitize Distance; // 0x11b8(0x04)
	float Digitize Distance Sharpness; // 0x11bc(0x04)
	float Digitize Cell Size; // 0x11c0(0x04)
	float Digitize Cell Color Multiplier; // 0x11c4(0x04)
	float Digitize Cell Distortion; // 0x11c8(0x04)
	float Digitize Background Color Multiplier; // 0x11cc(0x04)
	bool Alarm; // 0x11d0(0x01)
	struct UMaterial* mAlarm; // 0x11d8(0x08)
	struct UMaterialInstanceDynamic* iAlarm; // 0x11e0(0x08)
	struct FLinearColor Alarm Color; // 0x11e8(0x10)
	float Alarm Speed; // 0x11f8(0x04)
	bool Sketch; // 0x11fc(0x01)
	struct UMaterial* mSketch; // 0x1200(0x08)
	struct UMaterialInstanceDynamic* iSketch; // 0x1208(0x08)
	struct FLinearColor Sketch Color; // 0x1210(0x10)
	struct FLinearColor Sketch Background Color; // 0x1220(0x10)
	float Sketch Power; // 0x1230(0x04)
	float Sketch Pattern Rotation; // 0x1234(0x04)
	float Sketch Pattern Speed; // 0x1238(0x04)
	struct FLinearColor Custom Depth Highlighter Outline Color; // 0x123c(0x10)
	float Custom Depth Highlighter Outline Opacity; // 0x124c(0x04)
	struct FLinearColor Custom Depth Highlighter (C) Outline Color; // 0x1250(0x10)
	float Custom Depth Highlighter (C) Outline Opacity; // 0x1260(0x04)
	bool Wired; // 0x1264(0x01)
	struct UMaterialInstanceDynamic* iWired; // 0x1268(0x08)
	struct UMaterial* mWired; // 0x1270(0x08)
	struct FLinearColor Wired Color; // 0x1278(0x10)
	float Wired Power; // 0x1288(0x04)
	struct FAdvancedEffectFeatures Mosaic - Advanced; // 0x1290(0x38)
	struct FAdvancedEffectFeatures Drug - Advanced; // 0x12c8(0x38)
	struct FAdvancedEffectFeatures Alcohol - Advanced; // 0x1300(0x38)
	struct FAdvancedEffectFeatures Pixel Dissolve - Advanced; // 0x1338(0x38)
	struct FAdvancedEffectFeatures Channel Clamper - Advanced; // 0x1370(0x38)
	struct FAdvancedEffectFeatures Channel Swapper - Advanced; // 0x13a8(0x38)
	struct FAdvancedEffectFeatures Bleach Bypass - Advanced; // 0x13e0(0x38)
	struct FAdvancedEffectFeatures Blur - Advanced; // 0x1418(0x38)
	float ASCII PreMultiplier; // 0x1450(0x04)
	struct FAdvancedEffectFeatures ASCII - Advanced; // 0x1458(0x38)
	struct FAdvancedEffectFeatures Colorize - Advanced; // 0x1490(0x38)
	struct FAdvancedEffectFeatures Edge Detect - Advanced; // 0x14c8(0x38)
	struct FAdvancedEffectFeatures Emboss - Advanced; // 0x1500(0x38)
	struct FAdvancedEffectFeatures Hard Emboss - Advanced; // 0x1538(0x38)
	float Glitch Grid Distortion Power; // 0x1570(0x04)
	float Glitch Grid Distortion Size; // 0x1574(0x04)
	float Glitch Grid Distortion Speed; // 0x1578(0x04)
	struct FAdvancedEffectFeatures Glitch - Advanced; // 0x1580(0x38)
	bool Monitor Effects Tiled; // 0x15b8(0x01)
	struct FAdvancedEffectFeatures Monitor Effects - Advanced; // 0x15c0(0x38)
	struct FAdvancedEffectFeatures Hue Panner - Advanced; // 0x15f8(0x38)
	struct FAdvancedEffectFeatures Monochrome - Advanced; // 0x1630(0x38)
	struct FVector2D Radial Blur Center; // 0x1668(0x08)
	struct FVector2D Radial Blur Sample Offset; // 0x1670(0x08)
	struct FAdvancedEffectFeatures Radial Blur - Advanced; // 0x1678(0x38)
	struct FAdvancedEffectFeatures Scratches - Advanced; // 0x16b0(0x38)
	struct FAdvancedEffectFeatures Screen Waves - Advanced; // 0x16e8(0x38)
	struct FAdvancedEffectFeatures Distance Fog - Advanced; // 0x1720(0x38)
	struct FAdvancedEffectFeatures Screen Drops - Advanced; // 0x1758(0x38)
	struct FAdvancedEffectFeatures Invert - Advanced; // 0x1790(0x38)
	struct FAdvancedEffectFeatures Iridescent - Advanced; // 0x17c8(0x38)
	struct FAdvancedEffectFeatures Kuwahara - Advanced; // 0x1800(0x38)
	struct FAdvancedEffectFeatures Pulse - Advanced; // 0x1838(0x38)
	struct FAdvancedEffectFeatures Squares - Advanced; // 0x1870(0x38)
	struct FAdvancedEffectFeatures Tiles - Advanced; // 0x18a8(0x38)
	struct FAdvancedEffectFeatures TV Noise - Advanced; // 0x18e0(0x38)
	struct FAdvancedEffectFeatures Circles - Advanced; // 0x1918(0x38)
	struct FAdvancedEffectFeatures Sonar - Advanced; // 0x1950(0x38)
	struct FAdvancedEffectFeatures Distance Distortion - Advanced; // 0x1988(0x38)
	struct FAdvancedEffectFeatures Drawing - Advanced; // 0x19c0(0x38)
	struct FAdvancedEffectFeatures Magic Transitions - Advanced; // 0x19f8(0x38)
	struct FAdvancedEffectFeatures Screen Damage - Advanced; // 0x1a30(0x38)
	struct FAdvancedEffectFeatures Screen Decals - Advanced; // 0x1a68(0x38)
	struct FAdvancedEffectFeatures Sharpen - Advanced; // 0x1aa0(0x38)
	struct FAdvancedEffectFeatures Toon Shading - Advanced; // 0x1ad8(0x38)
	struct FAdvancedEffectFeatures Anamorphic Lens Flares - Advanced; // 0x1b10(0x38)
	struct FAdvancedEffectFeatures Frost - Advanced; // 0x1b48(0x38)
	struct FAdvancedEffectFeatures Neon - Advanced; // 0x1b80(0x38)
	struct FAdvancedEffectFeaturesNoCustomDepth Custom Depth Highlighter - Advanced; // 0x1bb8(0x30)
	struct FAdvancedEffectFeaturesNoCustomDepth Custom Depth Highlighter (Clip) - Advanced; // 0x1be8(0x30)
	struct FLinearColor 2D Transform Background Color; // 0x1c18(0x10)
	struct FAdvancedEffectFeatures 2D Transform - Advanced; // 0x1c28(0x38)
	struct FAdvancedEffectFeatures Kaleidescope - Advanced; // 0x1c60(0x38)
	struct FAdvancedEffectFeatures Letterboxing - Advanced; // 0x1c98(0x38)
	struct FAdvancedEffectFeatures Snow - Advanced; // 0x1cd0(0x38)
	struct FAdvancedEffectFeatures World Splash - Advanced; // 0x1d08(0x38)
	struct FAdvancedEffectFeatures World Glitch - Advanced; // 0x1d40(0x38)
	struct FAdvancedEffectFeatures Digitize - Advanced; // 0x1d78(0x38)
	struct FAdvancedEffectFeatures Alarm - Advanced; // 0x1db0(0x38)
	struct FAdvancedEffectFeatures Sketch - Advanced; // 0x1de8(0x38)
	struct FAdvancedEffectFeatures Wired - Advanced; // 0x1e20(0x38)
	float Comic Pattern Intensity; // 0x1e58(0x04)
	int32_t Comic Pattern Line Count; // 0x1e5c(0x04)
	float Comic Pattern Rotation; // 0x1e60(0x04)
	struct FAdvancedEffectFeatures Comic - Advanced; // 0x1e68(0x38)
	bool Actor Featurette; // 0x1ea0(0x01)
	struct UMaterial* mActorFeaturette; // 0x1ea8(0x08)
	struct UMaterialInstanceDynamic* iActorFeaturette; // 0x1eb0(0x08)
	struct FLinearColor Actor Featurette Background Multiplier; // 0x1eb8(0x10)
	float Actor Featurette Background Desaturation; // 0x1ec8(0x04)
	struct FLinearColor Actor Featurette Foreground Multiplier; // 0x1ecc(0x10)
	float Actor Featurette Foreground Saturation; // 0x1edc(0x04)
	float Actor Featurette Blur Amount; // 0x1ee0(0x04)
	int32_t Actor Featurette Blur Samples; // 0x1ee4(0x04)
	int32_t Actor Featurette Stencil Mask; // 0x1ee8(0x04)
	struct FAdvancedEffectFeaturesNoCustomDepth Actor Featurette - Advanced; // 0x1ef0(0x30)
	bool Infected; // 0x1f20(0x01)
	struct UMaterial* mInfected; // 0x1f28(0x08)
	struct UMaterialInstanceDynamic* iInfected; // 0x1f30(0x08)
	float Infected Distortion Amount; // 0x1f38(0x04)
	float Infected Smoothness; // 0x1f3c(0x04)
	float Infected Speed; // 0x1f40(0x04)
	float Infected TransformZ; // 0x1f44(0x04)
	struct FAdvancedEffectFeatures Infected - Advanced; // 0x1f48(0x38)
	bool Colored AO; // 0x1f80(0x01)
	struct UMaterial* mColoredAO; // 0x1f88(0x08)
	struct UMaterialInstanceDynamic* iColoredAO; // 0x1f90(0x08)
	struct FLinearColor Colored AO Color; // 0x1f98(0x10)
	float Colored AO Intensity; // 0x1fa8(0x04)
	struct FAdvancedEffectFeatures Colored AO - Advanced; // 0x1fb0(0x38)
	bool Camera Shake; // 0x1fe8(0x01)
	struct UMaterial* mCameraShake; // 0x1ff0(0x08)
	struct UMaterialInstanceDynamic* iCameraShake; // 0x1ff8(0x08)
	float Camera Shake Power (X); // 0x2000(0x04)
	float Camera Shake Power (Y); // 0x2004(0x04)
	float Camera Shake Frequency; // 0x2008(0x04)
	struct FAdvancedEffectFeatures Camera Shake - Advanced; // 0x2010(0x38)
	bool Disco Ball; // 0x2048(0x01)
	struct UMaterial* mDiscoBall; // 0x2050(0x08)
	struct UMaterialInstanceDynamic* iDiscoBall; // 0x2058(0x08)
	struct FVector3DN Disco Ball WS Center; // 0x2060(0x0c)
	struct FLinearColor Disco Ball Color 1; // 0x206c(0x10)
	struct FLinearColor Disco Ball Color 2; // 0x207c(0x10)
	struct FVector Disco Ball Block Scale; // 0x208c(0x0c)
	float Disco Ball Block Distribution; // 0x2098(0x04)
	float Disco Ball Rotation Speed; // 0x209c(0x04)
	float Disco Ball Manual Rotation; // 0x20a0(0x04)
	struct FAdvancedEffectFeatures Disco Ball - Advanced; // 0x20a8(0x38)
	bool Hazy Lights; // 0x20e0(0x01)
	struct UMaterial* mHazyLights; // 0x20e8(0x08)
	struct UMaterialInstanceDynamic* iHazyLights; // 0x20f0(0x08)
	struct FVector2DN Hazy Lights Move Speed; // 0x20f8(0x08)
	struct FVector2DN Hazy Lights Position; // 0x2100(0x08)
	struct FAdvancedEffectFeatures Hazy Lights - Advanced; // 0x2108(0x38)
	bool Melted World; // 0x2140(0x01)
	struct UMaterial* mMeltedWorld; // 0x2148(0x08)
	struct UMaterialInstanceDynamic* iMeltedWorld; // 0x2150(0x08)
	struct FVector Melted World Size; // 0x2158(0x0c)
	float Melted World Distance; // 0x2164(0x04)
	float Melted World Power; // 0x2168(0x04)
	float Melted World Sharpness; // 0x216c(0x04)
	struct FAdvancedEffectFeatures Melted World - Advanced; // 0x2170(0x38)
	bool Selective Color; // 0x21a8(0x01)
	struct UMaterial* mSelectiveColor; // 0x21b0(0x08)
	struct UMaterialInstanceDynamic* iSelectiveColor; // 0x21b8(0x08)
	struct FLinearColor Selective Color Mask Color; // 0x21c0(0x10)
	float Selective Color Hue Tolerance; // 0x21d0(0x04)
	float Selective Color Saturation Tolerance; // 0x21d4(0x04)
	float Selective Color Value Tolerance; // 0x21d8(0x04)
	struct FAdvancedEffectFeatures Selective Color - Advanced; // 0x21e0(0x38)
	bool Screen Fire; // 0x2218(0x01)
	struct UMaterial* mScreenFire; // 0x2220(0x08)
	struct UMaterialInstanceDynamic* iScreenFire; // 0x2228(0x08)
	struct FLinearColor Screen Fire Color; // 0x2230(0x10)
	float Screen Fire Distortion Amount; // 0x2240(0x04)
	float Screen Fire Mask Contrast; // 0x2244(0x04)
	float Screen Fire Mask Scale; // 0x2248(0x04)
	float Screen Fire Flame Tiling; // 0x224c(0x04)
	float Screen Fire Speed; // 0x2250(0x04)
	struct FAdvancedEffectFeatures Screen Fire - Advanced; // 0x2258(0x38)
	bool Haunted; // 0x2290(0x01)
	struct UMaterial* mHaunted; // 0x2298(0x08)
	struct UMaterialInstanceDynamic* iHaunted; // 0x22a0(0x08)
	float Haunted Amount; // 0x22a8(0x04)
	float Haunted Mask Scale; // 0x22ac(0x04)
	struct UTexture2D* Haunted Texture; // 0x22b0(0x08)
	float Haunted Texture Scale; // 0x22b8(0x04)
	struct FAdvancedEffectFeatures Haunted - Advanced; // 0x22c0(0x38)
	bool Grid Cell; // 0x22f8(0x01)
	struct UMaterial* mGridCell; // 0x2300(0x08)
	struct UMaterialInstanceDynamic* iGridCell; // 0x2308(0x08)
	bool Grid Cell Animated; // 0x2310(0x01)
	float Grid Cell Animation Speed; // 0x2314(0x04)
	struct FLinearColor Grid Cell Color; // 0x2318(0x10)
	struct FLinearColor Grid Cell Void Color; // 0x2328(0x10)
	float Grid Cell Tiling; // 0x2338(0x04)
	float Grid Cell Transition Amount; // 0x233c(0x04)
	bool Lens Distortion; // 0x2340(0x01)
	struct UMaterial* mLensDistortion; // 0x2348(0x08)
	struct UMaterialInstanceDynamic* iLensDistortion; // 0x2350(0x08)
	float Lens Distortion Optic Refinement; // 0x2358(0x04)
	float Lens Distortion Optic Size; // 0x235c(0x04)
	float Lens Distortion Optic Position X; // 0x2360(0x04)
	float Lens Distortion Optic Position Y; // 0x2364(0x04)
	struct UTexture2D* Lens Distortion Scope Texture; // 0x2368(0x08)
	float Lens Distortion Scope Texture Scale X; // 0x2370(0x04)
	float Lens Distortion Scope Texture Scale Y; // 0x2374(0x04)
	struct FAdvancedEffectFeatures Lens Distortion - Advanced; // 0x2378(0x38)
	struct FAdvancedEffectFeatures Grid Cell - Advanced; // 0x23b0(0x38)
	bool Zone; // 0x23e8(0x01)
	struct UMaterial* mZone; // 0x23f0(0x08)
	struct UMaterialInstanceDynamic* iZone; // 0x23f8(0x08)
	struct FLinearColor Zone Center; // 0x2400(0x10)
	float Zone Radius; // 0x2410(0x04)
	float Zone Edge Hardness; // 0x2414(0x04)
	struct FLinearColor Zone Edge Color; // 0x2418(0x10)
	struct FLinearColor Zone Coverage Color; // 0x2428(0x10)
	struct FAdvancedEffectFeatures Zone - Advanced; // 0x2438(0x38)
	bool Pyramid; // 0x2470(0x01)
	struct UMaterial* mPyramid; // 0x2478(0x08)
	struct UMaterialInstanceDynamic* iPyramid; // 0x2480(0x08)
	bool Pyramid Masked; // 0x2488(0x01)
	struct FLinearColor Pyramid Background Color; // 0x248c(0x10)
	float Pyramid Width; // 0x249c(0x04)
	float Pyramid Pan; // 0x24a0(0x04)
	float Pyramid Tile Amount; // 0x24a4(0x04)
	struct FAdvancedEffectFeatures Pyramid - Advanced; // 0x24a8(0x38)
	bool Mojo; // 0x24e0(0x01)
	struct UMaterial* mMojo; // 0x24e8(0x08)
	struct UMaterialInstanceDynamic* iMojo; // 0x24f0(0x08)
	bool Mojo Animated; // 0x24f8(0x01)
	float Mojo Animation Speed; // 0x24fc(0x04)
	struct UTexture2D* Mojo Mask; // 0x2500(0x08)
	struct UTexture2D* Mojo Distortion Map; // 0x2508(0x08)
	float Mojo Distortion Amount; // 0x2510(0x04)
	struct FLinearColor Mojo Color; // 0x2514(0x10)
	float Mojo Intensity; // 0x2524(0x04)
	float Mojo Phase; // 0x2528(0x04)
	float Mojo Tolerance; // 0x252c(0x04)
	struct FAdvancedEffectFeatures Mojo - Advanced; // 0x2530(0x38)

	void Create Effect Material Instance(struct UMaterial* Material, struct UMaterialInstanceDynamic*& Instance); // Function Chameleon.Chameleon_C.Create Effect Material Instance // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Mojo Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Mojo Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Pyramid Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Pyramid Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Zone Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Zone Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Lens Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Lens Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Grid Cell Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Grid Cell Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Haunted Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Haunted Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Screen Fire Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Screen Fire Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Selective Color Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Selective Color Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Melted World Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Melted World Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Hazy Lights Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Hazy Lights Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Disco Ball Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Disco Ball Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Camera Shake Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Camera Shake Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Colored AO Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Colored AO Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Infected Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Infected Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Actor Featurette Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Actor Featurette Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Set Advanced Effect Features (No Custom Depth)(struct FAdvancedEffectFeaturesNoCustomDepth Features, struct UMaterial* Material, struct UMaterialInstanceDynamic* Dynamic Material Instance); // Function Chameleon.Chameleon_C.Set Advanced Effect Features (No Custom Depth) // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Set Advanced Effect Features(struct FAdvancedEffectFeatures Features, struct UMaterial* Material, struct UMaterialInstanceDynamic* Dynamic Material Instance); // Function Chameleon.Chameleon_C.Set Advanced Effect Features // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Wired Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Wired Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Sketch Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Sketch Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Alarm Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Alarm Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Digitize Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Digitize Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void World Glitch Func(bool IsEnabled); // Function Chameleon.Chameleon_C.World Glitch Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void World Splash Func(bool IsEnabled); // Function Chameleon.Chameleon_C.World Splash Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Snow Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Snow Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Letterboxing Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Letterboxing Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Kaleidescope Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Kaleidescope Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void 2D Transform Func(bool IsEnabled); // Function Chameleon.Chameleon_C.2D Transform Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void SetEffectPriority(int32_t Priority, struct UMaterial* Material); // Function Chameleon.Chameleon_C.SetEffectPriority // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void ApplyChameleonSettings(); // Function Chameleon.Chameleon_C.ApplyChameleonSettings // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Custom Depth Highlighter (NC) Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Custom Depth Highlighter (NC) Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Custom Depth Highlighter Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Custom Depth Highlighter Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Neon Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Neon Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Frost Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Frost Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Anamorphic Lens Flares Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Anamorphic Lens Flares Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Toon Shading Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Toon Shading Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Sharpen Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Sharpen Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Screen Decals Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Screen Decals Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Screen Damage Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Screen Damage Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Magic Transitions Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Magic Transitions Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Drawing Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Drawing Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Distance Distortion Func(bool Condition); // Function Chameleon.Chameleon_C.Distance Distortion Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Sonar Func(bool Condition); // Function Chameleon.Chameleon_C.Sonar Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Circles Func(bool Condition); // Function Chameleon.Chameleon_C.Circles Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void LOOK Func(bool Condition); // Function Chameleon.Chameleon_C.LOOK Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void TV Noise Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.TV Noise Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Tiles Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.Tiles Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Squares Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.Squares Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Pulse Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.Pulse Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Kuwahara Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.Kuwahara Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Iridescent Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.Iridescent Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Invert Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.Invert Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Hard Emboss Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.Hard Emboss Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Emboss Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.Emboss Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Edge Detect Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.Edge Detect Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void ASCII Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.ASCII Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Bleach Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.Bleach Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Scratches Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Scratches Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Distance Fog Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Distance Fog Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Screen Waves Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Screen Waves Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Radial Blur Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Radial Blur Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Monochrome Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Monochrome Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Hue Panner Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Hue Panner Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void MonitorFX Func(bool IsEnabled); // Function Chameleon.Chameleon_C.MonitorFX Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Glitch Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Glitch Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Comic Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Comic Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Colorize Func(bool Condition); // Function Chameleon.Chameleon_C.Colorize Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Blur Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Blur Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Pixel Dissolve Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Pixel Dissolve Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Drug Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Drug Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Alcohol Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Alcohol Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Mosaic Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Mosaic Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Screen Drops Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Screen Drops Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void InitChameleon(); // Function Chameleon.Chameleon_C.InitChameleon // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Channel Swapper Func(bool IsEnabled); // Function Chameleon.Chameleon_C.Channel Swapper Func // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void Channel Clamper Func(bool& IsEnabled); // Function Chameleon.Chameleon_C.Channel Clamper Func // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void UserConstructionScript(); // Function Chameleon.Chameleon_C.UserConstructionScript // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x2bad3b0
	void ReceiveActorBeginOverlap(struct AActor* OtherActor); // Function Chameleon.Chameleon_C.ReceiveActorBeginOverlap // (Event|Public|BlueprintEvent) // @ game+0x2bad3b0
	void ReceiveTick(float DeltaSeconds); // Function Chameleon.Chameleon_C.ReceiveTick // (Event|Public|BlueprintEvent) // @ game+0x2bad3b0
	void ExecuteUbergraph_Chameleon(int32_t EntryPoint); // Function Chameleon.Chameleon_C.ExecuteUbergraph_Chameleon // (Final|UbergraphFunction) // @ game+0x2bad3b0
};

